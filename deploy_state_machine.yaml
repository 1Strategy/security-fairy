AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a security auditing tool
Resources:
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/StatesExecutionRole-${AWS::Region}
      DefinitionString: !Sub |-
        {
        	"StartAt": "InjectVariables",
        	"States": {
        		"InjectVariables": {
             "Type": "Task",
             "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_variable_injection",
             "Next": "QueryAthena"
            },
        		"QueryAthena": {
        			"Type": "Task",
        			"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_athena_query",
        			"Next": "WaitForQuery"
            },
        		"WaitForQuery": {
        			"Type": "Wait",
        			"Seconds": 60,
        			"Next": "BuildPolicy"
            },
        		"BuildPolicy": {
        			"Type": "Task",
        			"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_revised_policy_generator",
        			"Retry": [{
        				"ErrorEquals": [
        					"States.ALL"
                ],
        				"IntervalSeconds": 60,
        				"MaxAttempts": 3,
        				"BackoffRate": 1.5
              }],
        			"Next": "PromptForApproval"
            },
        		"PromptForApproval": {
        			"Type": "Parallel",
        			"End": true,
        			"Branches": [{
        					"StartAt": "Approval",
        					"States": {
        						"Approval": {
        							"Type": "Task",
        							"Resource": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:activity:security_fairy_approval_activity",
        							"Catch": [{
        								"ErrorEquals": ["States.TaskFailed", "States.Timeout"],
        								"Next": "PolicyDenial"
                      }],
        							"Next": "PolicyApply"
                    },
        						"PolicyApply": {
        							"Type": "Task",
        							"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_revised_policy_approve",
        							"End": true
                    },
        						"PolicyDenial": {
        							"Type": "Task",
        							"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_revised_policy_deny",
        							"End": true
                    }
                  }
                },
                {
        					"StartAt": "WaitForCode",
        					"States": {
        						"WaitForCode": {
        							"Type": "Wait",
        							"Seconds": 3,
        							"Next": "GenerateCode"
                    },
        						"GenerateCode": {
        							"Type": "Task",
        							"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_get_task_token",

        							"Next": "SendApprovalRequest"
                    },
        						"SendApprovalRequest": {
        							"Type": "Task",
        							"Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:security_fairy_email_approval_request",
        							"End": true
                    }
                  }
                }
              ]
            }
          }
        }

Outputs:
  myoutput:
    Description: Information about the value
    Value: !Ref StateMachine
    Export:
      Name: SecurityFairyStateMachine
